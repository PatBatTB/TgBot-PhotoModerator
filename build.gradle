plugins {
    id 'java'
    id "io.freefair.lombok" version "8.10"
}

group = 'com.github.patbattb'
version = '0.6.0'
def mainClass = 'com.github.patbattb.tgbot_photomoderator.App'
def vendorName = 'PatBatTB'

def manifestAttributes = ['Main-Class': mainClass,
                          'Implementation-Version': version,
                          'Implementation-Title': gradle.rootProject.name,
                          'Implementation-Vendor': vendorName]

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'org.telegram:telegrambots:6.9.7.1'
    implementation 'ch.qos.logback:logback-classic:1.5.8'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core:3.26.3'
    testImplementation 'org.mockito:mockito-core:5.13.0'
}

test {
    useJUnitPlatform {
        excludeTags("VersionCheck")
    }
}

jar {
    manifest {
        attributes manifestAttributes
    }
    finalizedBy 'copyProps'
}

tasks.register('jar-fat', Jar) {
    group 'build'
    manifest {
        attributes manifestAttributes
    }
    archiveBaseName = gradle.rootProject.name + "_fat"
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    finalizedBy 'copyProps'
}

tasks.register('copyProps') {
    group 'build'
    copy {
        from 'props/'
        into 'build/libs/props'
    }
}

tasks.register('checkVersion', Test) {
    group 'verification'
    def versionFile = file 'latestVersion.txt'
    if (!versionFile.exists()) versionFile.write(version)
    systemProperty('latestVersion', versionFile.text.trim())
    systemProperty('currentVersion', version)
    useJUnitPlatform {
        includeTags("VersionCheck")
    }
    finalizedBy 'latestVersionUpdate'
}

tasks.register('latestVersionUpdate') {
    def versionFile = file 'latestVersion.txt'
    versionFile.write(version)
}